{"version":3,"sources":["webpack:///./src/app/custom/hotel/categories/categories.component.html","webpack:///./src/app/custom/hotel/rooms/rooms.component.html","webpack:///./src/app/custom/hotel/categories/categories.component.scss","webpack:///./src/app/custom/hotel/categories/categories.component.ts","webpack:///./src/app/custom/hotel/hotel-routing.module.ts","webpack:///./src/app/custom/hotel/hotel.component.ts","webpack:///./src/app/custom/hotel/hotel.module.ts","webpack:///./src/app/custom/hotel/rooms/rooms.component.scss","webpack:///./src/app/custom/hotel/rooms/rooms.component.ts"],"names":[],"mappings":"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","file":"hotel-hotel-module-es5.js","sourcesContent":["module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Room Categories\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Rooms\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbS9ob3RlbC9jYXRlZ29yaWVzL2NhdGVnb3JpZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { SmartTableData } from '../../../@core/data/smart-table';\nimport { JarwisService } from '../../../services/jarwis.service';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss'],\n})\nexport class CategoriesComponent implements OnInit {\n\tpublic categories: any;\n\tpublic productForm: FormGroup;\n\tpublic product: any;\n\tpublic products: any;\n\tpublic ordersData: any;\n\tpublic order: any;\n\tpublic orders: any;\n\tpublic orderData: any;\n\tpublic orderDetails: any;\n\tpublic orderProducts: any;\n\tpublic ordered_products: any;\n\n\tngOnInit() {\n\t\t// this.getProducts();\n\t\t// this.getOrders();\n\t\tthis.getCategories();\n\t\t/* this.productForm = new FormGroup({\n\t\t\t'name': new FormControl(),\n\t\t\t'category': new FormControl(),\n\t\t\t'notes': new FormControl(),\n\t\t\t'price': new FormControl(),\n\t\t\t'quantity': new FormControl()\n\t\t}); */\n  }\n  \n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n      },\n      firstName: {\n        title: 'First Name',\n        type: 'string',\n      },\n      lastName: {\n        title: 'Last Name',\n        type: 'string',\n      },\n      username: {\n        title: 'Username',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n      age: {\n        title: 'Age',\n        type: 'number',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n      private service: SmartTableData,\n      private Jarwis: JarwisService,\n    ) {\n      const data = this.service.getData();\n      this.source.load(data);\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n\tgetCategories() {\n\t\tconst url = 'categories';\n\t\tthis.Jarwis.getURI(url).subscribe(categories => {\n      this.categories = categories;\n      console.log(categories);\n\t\t});\n  }\n  \n\tshowProduct(id) {\n\t\tconst url = 'products';\n\t\tconsole.log('Get Product ' + id);\n\t\t// return this.http.get('http://laravel-api.testing/api/product/' + id).subscribe(product => {\n\t\t\tthis.Jarwis.showURI( url, id).subscribe(product => {\n\t\t\tthis.product = product;\n\t\t\tthis.productForm.patchValue({\n\t\t\t\tid: this.product.product.product_id,\n\t\t\t\tname: this.product.product.product_name,\n\t\t\t\tcategory: this.product.product.product_category,\n\t\t\t\tnotes: this.product.product.product_notes,\n\t\t\t\tprice: this.product.product.selling_price,\n\t\t\t\tquantity: this.product.product.product_quantity\n\t\t\t});\n\t\t});\n\t}\n\t\n\tdeleteProduct(id) {\n\t\tconst url = 'products';\n\t\tconsole.log('Delete Product id ' + id);\n\t\n\t\t// this.http.delete('http://laravel-api.testing/api/product/' + id).subscribe(res => {\n\t\tthis.Jarwis.deleteURI( url, id).subscribe(res => {\n\t\t\tconsole.log('Product Deleted and refresh Table');\n\t\t\t// this.getProducts();\n\t\t}, err => {\n\t\t\tconsole.log('Error occured');\n\t\t});\n\t}\n\t\n\tputProduct(id) {\n\t\tconst url = 'products';\n\t\tconsole.log('Update Product id ' + id);\n\t\t// this.http.put('http://laravel-api.testing/api/product/' + id, this.productForm.value).subscribe(res => {\n\t\tthis.Jarwis.putURI( url, id, this.productForm.value).subscribe(res => {\n\t\t\t// $('#product-modal').hide();\n\t\t\tconsole.log('Product Updated and refresh table');\n\t\t\t// this.getProducts();\n\t\t}, err => {\n\t\t\tconsole.log('Error occured');\n    });\t\n\t}\n    \n  // Add a New Product\n  // storeProduct(productForm: NgForm) {\n  storeProduct(productForm: any) {\n    const url = 'products';\n    // console.log('Form successful submit.');\n    // console.log(productForm.value);\n  \n    this.Jarwis.postURI( url, productForm.value).subscribe(res => {\n    // this.getProducts();\n    productForm.reset();\n    }, err => {\n    console.log('Error occured');\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HotelComponent } from './hotel.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { RoomsComponent } from './rooms/rooms.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: HotelComponent,\n  children: [\n    {\n      path: 'categories',\n      component: CategoriesComponent,\n    },\n    {\n      path: 'rooms',\n      component: RoomsComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HotelRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-hotel',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class HotelComponent {\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HotelRoutingModule } from './hotel-routing.module';\nimport { HotelComponent } from './hotel.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { RoomsComponent } from './rooms/rooms.component';\nimport { NbCardModule, NbTreeGridModule, NbIconModule, NbInputModule } from '@nebular/theme';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\n\n@NgModule({\n  declarations: [\n    HotelComponent,\n    CategoriesComponent,\n    RoomsComponent,\n  ],\n  imports: [\n    CommonModule,\n    HotelRoutingModule,\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    ThemeModule,\n    Ng2SmartTableModule,\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n  ],\n})\nexport class HotelModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbS9ob3RlbC9yb29tcy9yb29tcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { SmartTableData } from '../../../@core/data/smart-table';\nimport { JarwisService } from '../../../services/jarwis.service';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.scss'],\n})\nexport class RoomsComponent implements OnInit {\n\tpublic rooms: any;\n\tpublic productForm: FormGroup;\n\tpublic product: any;\n\tpublic products: any;\n\tpublic ordersData: any;\n\tpublic order: any;\n\tpublic orders: any;\n\tpublic orderData: any;\n\tpublic orderDetails: any;\n\tpublic orderProducts: any;\n\tpublic ordered_products: any;\n\n\tngOnInit() {\n\t\tthis.getRooms();\n  }\n  settings = {\n    add: false,\n    // add: {\n    //   addButtonContent: '<i class=\"nb-plus\"></i>',\n    //   createButtonContent: '<i class=\"nb-checkmark\"></i>',\n    //   cancelButtonContent: '<i class=\"nb-close\"></i>',\n    // },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n      },\n      firstName: {\n        title: 'First Name',\n        type: 'string',\n      },\n      lastName: {\n        title: 'Last Name',\n        type: 'string',\n      },\n      username: {\n        title: 'Username',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n      age: {\n        title: 'Age',\n        type: 'number',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    private service: SmartTableData,\n    private Jarwis: JarwisService,\n    ) {\n      const data = this.service.getData();\n      this.source.load(data);\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  getRooms() {\n    const url = 'rooms';\n    this.Jarwis.getURI(url).subscribe(rooms => {\n      this.rooms = rooms;\n      console.log(rooms);\n    });\n  }\n\n  showProduct(id) {\n    const url = 'products';\n    console.log('Get Product ' + id);\n    // return this.http.get('http://laravel-api.testing/api/product/' + id).subscribe(product => {\n      this.Jarwis.showURI( url, id).subscribe(product => {\n      this.product = product;\n      this.productForm.patchValue({\n        id: this.product.product.product_id,\n        name: this.product.product.product_name,\n        category: this.product.product.product_category,\n        notes: this.product.product.product_notes,\n        price: this.product.product.selling_price,\n        quantity: this.product.product.product_quantity\n      });\n    });\n  }\n\n  deleteProduct(id) {\n    const url = 'products';\n    console.log('Delete Product id ' + id);\n\n    // this.http.delete('http://laravel-api.testing/api/product/' + id).subscribe(res => {\n    this.Jarwis.deleteURI( url, id).subscribe(res => {\n      console.log('Product Deleted and refresh Table');\n      // this.getProducts();\n    }, err => {\n      console.log('Error occured');\n    });\n  }\n\n  putProduct(id) {\n    const url = 'products';\n    console.log('Update Product id ' + id);\n    // this.http.put('http://laravel-api.testing/api/product/' + id, this.productForm.value).subscribe(res => {\n    this.Jarwis.putURI( url, id, this.productForm.value).subscribe(res => {\n      // $('#product-modal').hide();\n      console.log('Product Updated and refresh table');\n      // this.getProducts();\n    }, err => {\n      console.log('Error occured');\n    });\t\n  }\n    \n  // Add a New Product\n  // storeProduct(productForm: NgForm) {\n  storeProduct(productForm: any) {\n    const url = 'products';\n    // console.log('Form successful submit.');\n    // console.log(productForm.value);\n\n    this.Jarwis.postURI( url, productForm.value).subscribe(res => {\n    // this.getProducts();\n    productForm.reset();\n    }, err => {\n    console.log('Error occured');\n    });\n  }\n\n}\n"],"sourceRoot":""}