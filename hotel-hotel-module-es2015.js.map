{"version":3,"sources":["webpack:///./src/app/custom/hotel/bookings/bookings.component.html","webpack:///./src/app/custom/hotel/categories/categories.component.html","webpack:///./src/app/custom/hotel/countries/countries.component.html","webpack:///./src/app/custom/hotel/customers/customers.component.html","webpack:///./src/app/custom/hotel/rooms/rooms.component.html","webpack:///./src/app/custom/hotel/bookings/bookings.component.scss","webpack:///./src/app/custom/hotel/bookings/bookings.component.ts","webpack:///./src/app/custom/hotel/categories/categories.component.scss","webpack:///./src/app/custom/hotel/categories/categories.component.ts","webpack:///./src/app/custom/hotel/countries/countries.component.scss","webpack:///./src/app/custom/hotel/countries/countries.component.ts","webpack:///./src/app/custom/hotel/customers/customers.component.scss","webpack:///./src/app/custom/hotel/customers/customers.component.ts","webpack:///./src/app/custom/hotel/hotel-routing.module.ts","webpack:///./src/app/custom/hotel/hotel.component.ts","webpack:///./src/app/custom/hotel/hotel.module.ts","webpack:///./src/app/custom/hotel/rooms/rooms.component.scss","webpack:///./src/app/custom/hotel/rooms/rooms.component.ts"],"names":[],"mappings":"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","file":"hotel-hotel-module-es2015.js","sourcesContent":["module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Customers\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"bookings\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\" (createConfirm)=\\\"addRecord($event)\\\" (editConfirm)=\\\"updateRecord($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Room Categories\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Customers\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"countries\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\" (createConfirm)=\\\"addRecord($event)\\\" (editConfirm)=\\\"updateRecord($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Customers\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"customers\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\" (createConfirm)=\\\"addRecord($event)\\\" (editConfirm)=\\\"updateRecord($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Rooms\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"rooms\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\" (createConfirm)=\\\"addRecord($event)\\\" (editConfirm)=\\\"updateRecord($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbS9ob3RlbC9ib29raW5ncy9ib29raW5ncy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport Booking from '../models/Booking';\n\n@Component({\n  selector: 'ngx-bookings',\n  templateUrl: './bookings.component.html',\n  styleUrls: ['./bookings.component.scss'],\n})\nexport class BookingsComponent implements OnInit {\n\n\tpublic bookings: any;\n  public data: any;\n  public url: 'http://api.mainahighwayhotel.com/api/rooms';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n\n    this.http.get<Booking[]>('http://api.mainahighwayhotel.com/api/bookings').subscribe( data => {\n          this.data = data;\n          this.bookings = this.data.response.bookings;\n          console.log(this.data);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n    });\n   }\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmCreate: true,\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmEdit: true,\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      room_number: {\n        title: 'Booking Number',\n        type: 'string',\n      },\n      floor: {\n        title: 'Floor',\n        type: 'number',\n      },\n      room_description: {\n        title: 'Description',\n        type: 'string',\n      },\n    },\n  };\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  addRecord(event) {\n    const data = {\n      'room_number' : event.newData.room_number,\n      'floor' : event.newData.floor,\n      'description' : event.newData.room_description,\n      'room_price' : event.newData.room_price,\n    };\n\t  this.http.post<Booking>('http://api.mainahighwayhotel.com/api/bookings', data).subscribe(\n        res => {\n          console.log(res);\n          event.confirm.resolve(event.newData);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n      },\n    );\n  }\n  updateRecord(event) {\n    console.log('ddddd');\n    const data = {\n      'room_number' : event.newData.room_number,\n      'floor' : event.newData.floor,\n      'description' : event.newData.room_description,\n      'room_price' : event.newData.room_price,\n      'id' : event.newData.id,\n    };\n    this.http.put<Booking>(this.url + '/' + event.newData.id, data).subscribe(\n        res => {\n          console.log(res);\n          event.confirm.resolve(event.newData);\n      },\n      (err: HttpErrorResponse) => {\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n      },\n    );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbS9ob3RlbC9jYXRlZ29yaWVzL2NhdGVnb3JpZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { SmartTableData } from '../../../@core/data/smart-table';\nimport { JarwisService } from '../../../services/jarwis.service';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss'],\n})\nexport class CategoriesComponent implements OnInit {\n\tpublic categories: any;\n\tpublic productForm: FormGroup;\n\tpublic product: any;\n\tpublic products: any;\n\tpublic ordersData: any;\n\tpublic order: any;\n\tpublic orders: any;\n\tpublic orderData: any;\n\tpublic orderDetails: any;\n\tpublic orderProducts: any;\n\tpublic ordered_products: any;\n\n\tngOnInit() {\n\t\t// this.getProducts();\n\t\t// this.getOrders();\n\t\tthis.getCategories();\n\t\t/* this.productForm = new FormGroup({\n\t\t\t'name': new FormControl(),\n\t\t\t'category': new FormControl(),\n\t\t\t'notes': new FormControl(),\n\t\t\t'price': new FormControl(),\n\t\t\t'quantity': new FormControl()\n\t\t}); */\n  }\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n      },\n      firstName: {\n        title: 'First Name',\n        type: 'string',\n      },\n      lastName: {\n        title: 'Last Name',\n        type: 'string',\n      },\n      username: {\n        title: 'Username',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n      age: {\n        title: 'Age',\n        type: 'number',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n      private service: SmartTableData,\n      private Jarwis: JarwisService,\n    ) {\n      const data = this.service.getData();\n      this.source.load(data);\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n\tgetCategories() {\n\t\tconst url = 'categories';\n\t\tthis.Jarwis.getURI(url).subscribe(categories => {\n      this.categories = categories;\n      console.log(categories);\n\t\t});\n  }\n\n\tshowProduct(id) {\n\t\tconst url = 'products';\n\t\tconsole.log('Get Product ' + id);\n\t\t// return this.http.get('http://laravel-api.testing/api/product/' + id).subscribe(product => {\n\t\t\tthis.Jarwis.showURI( url, id).subscribe(product => {\n\t\t\tthis.product = product;\n\t\t\tthis.productForm.patchValue({\n\t\t\t\tid: this.product.product.product_id,\n\t\t\t\tname: this.product.product.product_name,\n\t\t\t\tcategory: this.product.product.product_category,\n\t\t\t\tnotes: this.product.product.product_notes,\n\t\t\t\tprice: this.product.product.selling_price,\n\t\t\t\tquantity: this.product.product.product_quantity,\n\t\t\t});\n\t\t});\n\t}\n\n\tdeleteProduct(id) {\n\t\tconst url = 'products';\n\t\tconsole.log('Delete Product id ' + id);\n\n\t\t// this.http.delete('http://laravel-api.testing/api/product/' + id).subscribe(res => {\n\t\tthis.Jarwis.deleteURI( url, id).subscribe(res => {\n\t\t\tconsole.log('Product Deleted and refresh Table');\n\t\t\t// this.getProducts();\n\t\t}, err => {\n\t\t\tconsole.log('Error occured');\n\t\t});\n\t}\n\n\tputProduct(id) {\n\t\tconst url = 'products';\n\t\tconsole.log('Update Product id ' + id);\n\t\t// this.http.put('http://laravel-api.testing/api/product/' + id, this.productForm.value).subscribe(res => {\n\t\tthis.Jarwis.putURI( url, id, this.productForm.value).subscribe(res => {\n\t\t\t// $('#product-modal').hide();\n\t\t\tconsole.log('Product Updated and refresh table');\n\t\t\t// this.getProducts();\n\t\t}, err => {\n\t\t\tconsole.log('Error occured');\n    });\n\t}\n\n  // Add a New Product\n  // storeProduct(productForm: NgForm) {\n  storeProduct(productForm: any) {\n    const url = 'products';\n    // console.log('Form successful submit.');\n    // console.log(productForm.value);\n\n    this.Jarwis.postURI( url, productForm.value).subscribe(res => {\n    // this.getProducts();\n    productForm.reset();\n    }, err => {\n    console.log('Error occured');\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbS9ob3RlbC9jb3VudHJpZXMvY291bnRyaWVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport Country from '../models/Country';\n\n@Component({\n  selector: 'ngx-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.scss'],\n})\nexport class CountriesComponent implements OnInit {\n\n\tpublic countries: any;\n  public data: any;\n  public url: 'http://api.mainahighwayhotel.com/api/rooms';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n\n    this.http.get<Country[]>('http://api.mainahighwayhotel.com/api/countries').subscribe( data => {\n          this.data = data;\n          this.countries = this.data.response.countries;\n          console.log(this.data);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n    });\n   }\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmCreate: true,\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmEdit: true,\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      shortcode: {\n        title: 'Country Shortcode',\n        type: 'string',\n      },\n      title: {\n        title: 'Title',\n        type: 'string',\n      },\n    },\n  };\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  addRecord(event) {\n    const data = {\n      'shortcode' : event.newData.shortcode,\n      'title' : event.newData.title,\n    };\n\t  this.http.post<Country>('http://api.mainahighwayhotel.com/api/countries', data).subscribe(\n        res => {\n          console.log(res);\n          event.confirm.resolve(event.newData);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n      },\n    );\n  }\n  updateRecord(event) {\n    const data = {\n      'shortcode' : event.newData.shortcode,\n      'title' : event.newData.title,\n    };\n    this.http.put<Country>(this.url + '/' + event.newData.id, data).subscribe(\n        res => {\n          console.log(res);\n          event.confirm.resolve(event.newData);\n      },\n      (err: HttpErrorResponse) => {\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n      },\n    );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbS9ob3RlbC9jdXN0b21lcnMvY3VzdG9tZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport Customer from '../models/Customer';\nimport { MultiSelectComponent } from '../../components/multi-select/multi-select.component';\n\n@Component({\n  selector: 'ngx-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n})\nexport class CustomersComponent implements OnInit {\n\n\tpublic customers: any;\n  public data: any;\n  public url: 'http://api.mainahighwayhotel.com/api/rooms';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.http.get<Customer[]>('http://api.mainahighwayhotel.com/api/customers').subscribe( data => {\n          this.data = data;\n          this.customers = this.data.response.customers;\n          console.log(this.data);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n    });\n  }\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmCreate: true,\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmEdit: true,\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      first_name: {\n        title: 'First Name',\n        type: 'string',\n      },\n      last_name: {\n        title: 'Last Name',\n        type: 'string',\n      },\n      phone: {\n        title: 'Phone',\n        type: 'number',\n      },\n      email: {\n        title: 'Email',\n        type: 'string',\n      },\n      address: {\n        title: 'Address',\n        type: 'string',\n      },\n      // country_id: {\n      //   title: 'Country',\n      //   type: 'number',\n      // },\n      country_id: {\n        title: 'Multi select',\n        type: 'html',\n         editor: {\n          type: 'custom',\n          valuePrepareFunction: (cell, row) => row,\n          component: MultiSelectComponent,\n         },\n      }\n    },\n  };\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  addRecord(event) {\n    const data = {\n      'first_name' : event.newData.first_name,\n      'last_name' : event.newData.last_name,\n      'phone' : event.newData.phone,\n      'address' : event.newData.address,\n      'email' : event.newData.email,\n      'country_id' : event.newData.country_id,\n    };\n\t  this.http.post<Customer>('http://api.mainahighwayhotel.com/api/customers', data).subscribe(\n        res => {\n          console.log(res);\n          event.confirm.resolve(event.newData);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n      },\n    );\n  }\n  updateRecord(event) {\n    console.log('Client-side error occured.');\n    const data = {\n      'first_name' : event.newData.first_name,\n      'last_name' : event.newData.last_name,\n      'phone' : event.newData.phone,\n      'address' : event.newData.address,\n      'email' : event.newData.email,\n      'country_id' : event.newData.country_id,\n    };\n    this.http.put<Customer>(this.url + '/' + event.newData.id, data).subscribe(\n        res => {\n          console.log(res);\n          event.confirm.resolve(event.newData);\n      },\n      (err: HttpErrorResponse) => {\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n      },\n    );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HotelComponent } from './hotel.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { RoomsComponent } from './rooms/rooms.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { BookingsComponent } from './bookings/bookings.component';\nimport { CountriesComponent } from './countries/countries.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: HotelComponent,\n  children: [\n    {\n      path: 'categories',\n      component: CategoriesComponent,\n    },\n    {\n      path: 'rooms',\n      component: RoomsComponent,\n    },\n    {\n      path: 'customers',\n      component: CustomersComponent,\n    },\n    {\n      path: 'bookings',\n      component: BookingsComponent,\n    },\n    {\n      path: 'countries',\n      component: CountriesComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HotelRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-hotel',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class HotelComponent {\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HotelRoutingModule } from './hotel-routing.module';\nimport { HotelComponent } from './hotel.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { RoomsComponent } from './rooms/rooms.component';\nimport { NbCardModule, NbTreeGridModule, NbIconModule, NbInputModule } from '@nebular/theme';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { CustomersComponent } from './customers/customers.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { BookingsComponent } from './bookings/bookings.component';\n\n@NgModule({\n  declarations: [\n    HotelComponent,\n    CategoriesComponent,\n    RoomsComponent,\n    CustomersComponent,\n    CountriesComponent,\n    BookingsComponent,\n  ],\n  imports: [\n    CommonModule,\n    HotelRoutingModule,\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    ThemeModule,\n    Ng2SmartTableModule,\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n  ],\n})\nexport class HotelModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbS9ob3RlbC9yb29tcy9yb29tcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { SmartTableData } from '../../../@core/data/smart-table';\nimport { JarwisService } from '../../../services/jarwis.service';\nimport { FormGroup } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport Room from '../models/Room';\n\n@Component({\n  selector: 'ngx-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.scss'],\n})\nexport class RoomsComponent implements OnInit {\n\tpublic rooms: any;\n\tpublic productForm: FormGroup;\n\tpublic product: any;\n\tpublic products: any;\n\tpublic ordersData: any;\n\tpublic order: any;\n\tpublic orders: any;\n\tpublic orderData: any;\n\tpublic orderDetails: any;\n\tpublic orderProducts: any;\n\tpublic ordered_products: any;\n  public data: any;\n  public url: 'http://api.mainahighwayhotel.com/api/rooms';\n\tngOnInit(): void {\n    // this.getRooms();\n    this.http.get<Room[]>('http://api.mainahighwayhotel.com/api/rooms').subscribe( data => {\n          this.data = data;\n          this.rooms = this.data.response.rooms;\n          console.log(this.data);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n    });\n  }\n  settings = {\n    mode: 'inline',\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmCreate: true,\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmEdit: true,\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      room_number: {\n        title: 'Room Number',\n        type: 'string',\n      },\n      floor: {\n        title: 'Floor',\n        type: 'number',\n      },\n      room_description: {\n        title: 'Description',\n        type: 'string',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    // private service: SmartTableData,\n    private http: HttpClient,\n    private Jarwis: JarwisService,\n    ) {\n      // this.source = new ServerDataSource(http, { endPoint: 'http://api.mainahighwayhotel.com/api/rooms' });\n      // this.getRooms();\n      // const data = this.service.getData();\n\n      // this.data = this.Jarwis.getURI('rooms').subscribe(rooms => {\n      //   this.rooms = rooms;\n      //   // this.rooms = this.rooms.response;\n      //   this.source.load(this.rooms.response);\n      //   // console.log(this.rooms);\n      //   // this.source.load(data);\n      // });\n      // console.log(data);\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  addRecord(event) {\n    const data = {\n      'room_number' : event.newData.room_number,\n      'floor' : event.newData.floor,\n      'description' : event.newData.room_description,\n      'room_price' : event.newData.room_price,\n    };\n\t  this.http.post<Room>('http://api.mainahighwayhotel.com/api/rooms', data).subscribe(\n        res => {\n          console.log(res);\n          event.confirm.resolve(event.newData);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n      },\n    );\n  }\n  updateRecord(event) {\n    console.log('ddddd');\n    const data = {\n      'room_number' : event.newData.room_number,\n      'floor' : event.newData.floor,\n      'description' : event.newData.room_description,\n      'room_price' : event.newData.room_price,\n      'id' : event.newData.id,\n    };\n    this.http.put<Room>(this.url + '/' + event.newData.id, data).subscribe(\n        res => {\n          console.log(res);\n          event.confirm.resolve(event.newData);\n      },\n      (err: HttpErrorResponse) => {\n        if (err.error instanceof Error) {\n          console.log('Client-side error occured.');\n        } else {\n          console.log('Server-side error occured.');\n        }\n      },\n    );\n  }\n\n  getRooms() {\n    const url = 'rooms';\n    this.Jarwis.getURI(url).subscribe(rooms => {\n      this.rooms = rooms;\n      // this.dataSource(this.rooms.response)\n      console.log(rooms);\n    });\n  }\n\n  showProduct(id) {\n    const url = 'products';\n    console.log('Get Product ' + id);\n    // return this.http.get('http://laravel-api.testing/api/product/' + id).subscribe(product => {\n      this.Jarwis.showURI( url, id).subscribe(product => {\n      this.product = product;\n      this.productForm.patchValue({\n        id: this.product.product.product_id,\n        name: this.product.product.product_name,\n        category: this.product.product.product_category,\n        notes: this.product.product.product_notes,\n        price: this.product.product.selling_price,\n        quantity: this.product.product.product_quantity,\n      });\n    });\n  }\n\n  deleteProduct(id) {\n    const url = 'products';\n    console.log('Delete Product id ' + id);\n\n    // this.http.delete('http://laravel-api.testing/api/product/' + id).subscribe(res => {\n    this.Jarwis.deleteURI( url, id).subscribe(res => {\n      console.log('Product Deleted and refresh Table');\n      // this.getProducts();\n    }, err => {\n      console.log('Error occured');\n    });\n  }\n\n  putProduct(id) {\n    const url = 'products';\n    console.log('Update Product id ' + id);\n    // this.http.put('http://laravel-api.testing/api/product/' + id, this.productForm.value).subscribe(res => {\n    this.Jarwis.putURI( url, id, this.productForm.value).subscribe(res => {\n      // $('#product-modal').hide();\n      console.log('Product Updated and refresh table');\n      // this.getProducts();\n    }, err => {\n      console.log('Error occured');\n    });\n  }\n\n  // Add a New Product\n  // storeProduct(productForm: NgForm) {\n  storeProduct(productForm: any) {\n    const url = 'products';\n    // console.log('Form successful submit.');\n    // console.log(productForm.value);\n\n    this.Jarwis.postURI( url, productForm.value).subscribe(res => {\n    // this.getProducts();\n    productForm.reset();\n    }, err => {\n    console.log('Error occured');\n    });\n  }\n\n}\n"],"sourceRoot":""}