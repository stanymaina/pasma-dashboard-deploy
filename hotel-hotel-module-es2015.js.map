{"version":3,"sources":["webpack:///./src/app/custom/hotel/categories/categories.component.html","webpack:///./src/app/custom/hotel/rooms/rooms.component.html","webpack:///./src/app/custom/hotel/categories/categories.component.scss","webpack:///./src/app/custom/hotel/categories/categories.component.ts","webpack:///./src/app/custom/hotel/hotel-routing.module.ts","webpack:///./src/app/custom/hotel/hotel.component.ts","webpack:///./src/app/custom/hotel/hotel.module.ts","webpack:///./src/app/custom/hotel/rooms/rooms.component.scss","webpack:///./src/app/custom/hotel/rooms/rooms.component.ts"],"names":[],"mappings":"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","file":"hotel-hotel-module-es2015.js","sourcesContent":["module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Room Categories\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Rooms\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbS9ob3RlbC9jYXRlZ29yaWVzL2NhdGVnb3JpZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { SmartTableData } from '../../../@core/data/smart-table';\n\n@Component({\n  selector: 'ngx-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss'],\n})\nexport class CategoriesComponent {\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n      },\n      firstName: {\n        title: 'First Name',\n        type: 'string',\n      },\n      lastName: {\n        title: 'Last Name',\n        type: 'string',\n      },\n      username: {\n        title: 'Username',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n      age: {\n        title: 'Age',\n        type: 'number',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private service: SmartTableData) {\n    const data = this.service.getData();\n    this.source.load(data);\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HotelComponent } from './hotel.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { RoomsComponent } from './rooms/rooms.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: HotelComponent,\n  children: [\n    {\n      path: 'categories',\n      component: CategoriesComponent,\n    },\n    {\n      path: 'rooms',\n      component: RoomsComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HotelRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-hotel',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class HotelComponent {\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HotelRoutingModule } from './hotel-routing.module';\nimport { HotelComponent } from './hotel.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { RoomsComponent } from './rooms/rooms.component';\nimport { NbCardModule, NbTreeGridModule, NbIconModule, NbInputModule } from '@nebular/theme';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\n\n@NgModule({\n  declarations: [\n    HotelComponent,\n    CategoriesComponent,\n    RoomsComponent,\n  ],\n  imports: [\n    CommonModule,\n    HotelRoutingModule,\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    ThemeModule,\n    Ng2SmartTableModule,\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n  ],\n})\nexport class HotelModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbS9ob3RlbC9yb29tcy9yb29tcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { SmartTableData } from '../../../@core/data/smart-table';\n\n@Component({\n  selector: 'ngx-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.scss'],\n})\nexport class RoomsComponent {\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n      },\n      firstName: {\n        title: 'First Name',\n        type: 'string',\n      },\n      lastName: {\n        title: 'Last Name',\n        type: 'string',\n      },\n      username: {\n        title: 'Username',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n      age: {\n        title: 'Age',\n        type: 'number',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private service: SmartTableData) {\n    const data = this.service.getData();\n    this.source.load(data);\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n}\n"],"sourceRoot":""}